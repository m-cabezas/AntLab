<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_anthill" kind="class" language="C++" prot="public">
    <compoundname>Anthill</compoundname>
    <basecompoundref refid="class_obstacle" prot="public" virt="non-virtual">Obstacle</basecompoundref>
    <includes refid="anthill_8h" local="no">anthill.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_anthill_1a5ce3eeda78bd506d69605907d921872f" prot="private" static="no" mutable="no">
        <type><ref refid="struct_c_o_n_f_i_g" kindref="compound">CONFIG</ref></type>
        <definition>CONFIG Anthill::_config</definition>
        <argsstring></argsstring>
        <name>_config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="42" column="12" bodyfile="anthill.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1a1c85bf4b9dc60899ae1dd37121e786bd" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Anthill::_maxPop</definition>
        <argsstring></argsstring>
        <name>_maxPop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="43" column="9" bodyfile="anthill.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1a0236d40219d628649e35b55e9ad1681e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Anthill::_maxFood</definition>
        <argsstring></argsstring>
        <name>_maxFood</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="44" column="9" bodyfile="anthill.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Anthill::_currentFood</definition>
        <argsstring></argsstring>
        <name>_currentFood</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="45" column="9" bodyfile="anthill.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1ae998f83155953a248872a9078734e820" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Anthill::_queenAlive</definition>
        <argsstring></argsstring>
        <name>_queenAlive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="46" column="10" bodyfile="anthill.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" prot="private" static="no" mutable="no">
        <type><ref refid="class_queen" kindref="compound">Queen</ref> *</type>
        <definition>Queen* Anthill::_queen</definition>
        <argsstring></argsstring>
        <name>_queen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="47" column="11" bodyfile="anthill.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_egg" kindref="compound">Egg</ref> * &gt;</type>
        <definition>vector&lt;Egg *&gt; Anthill::_eggs</definition>
        <argsstring></argsstring>
        <name>_eggs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="48" column="12" bodyfile="anthill.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_larva" kindref="compound">Larva</ref> * &gt;</type>
        <definition>vector&lt;Larva *&gt; Anthill::_larvas</definition>
        <argsstring></argsstring>
        <name>_larvas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="49" column="12" bodyfile="anthill.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1a92cfa9df16dcac810eb7410712164bed" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_worker" kindref="compound">Worker</ref> * &gt;</type>
        <definition>vector&lt;Worker *&gt; Anthill::_workers</definition>
        <argsstring></argsstring>
        <name>_workers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="50" column="12" bodyfile="anthill.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_anthill_1abf85b8dbefb90401102290d1239e5caf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Anthill::_newWarriors</definition>
        <argsstring></argsstring>
        <name>_newWarriors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="51" column="9" bodyfile="anthill.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_anthill_1a2b5eb754c236e4add4ba4077fb134782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Anthill::Anthill</definition>
        <argsstring>()</argsstring>
        <name>Anthill</name>
        <briefdescription>
<para>default constructor of anthill </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="20" column="5" bodyfile="anthill.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a6c39fdc3e19ce0369e890bb543f9bf0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Anthill::Anthill</definition>
        <argsstring>(CONFIG &amp;config, int maxPop, int maxFood, pair&lt; int, int &gt; position, int width, int height)</argsstring>
        <name>Anthill</name>
        <param>
          <type><ref refid="struct_c_o_n_f_i_g" kindref="compound">CONFIG</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxPop</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxFood</declname>
        </param>
        <param>
          <type>pair&lt; int, int &gt;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>main constructor of <ref refid="class_anthill" kindref="compound">Anthill</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxPop</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxFood</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="22" column="5" bodyfile="anthill.cpp" bodystart="19" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a0a8a9aa35526e2c65e4520a990a18e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Anthill::~Anthill</definition>
        <argsstring>()</argsstring>
        <name>~Anthill</name>
        <briefdescription>
<para>destructor of anthill </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="24" column="5" bodyfile="anthill.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1ad7ddaced1d80e90839a7fb80760a59fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Anthill::getNewWarriors</definition>
        <argsstring>() const</argsstring>
        <name>getNewWarriors</name>
        <briefdescription>
<para>get all warriors that just evolved from workers </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return warriors created by orchestrator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="26" column="9" bodyfile="anthill.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a335795a55847de8ab6da4d09875bacd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Anthill::getPopulation</definition>
        <argsstring>() const</argsstring>
        <name>getPopulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gives the current population within the anthill <simplesect kind="return"><para>total population </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="28" column="9" bodyfile="anthill.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a7ff7e41269324d61bc60360a6fb59a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::initAnthill</definition>
        <argsstring>()</argsstring>
        <name>initAnthill</name>
        <briefdescription>
<para>create eggs, larvas, workers at first round </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="30" column="10" bodyfile="anthill.cpp" bodystart="60" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1aca5a12987317ef7e9780b231aad1c153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::spawnEgg</definition>
        <argsstring>()</argsstring>
        <name>spawnEgg</name>
        <briefdescription>
<para>method used to spawn eggs in the anthill, between 0 and 5 eggs are created </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="32" column="10" bodyfile="anthill.cpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a68a8d3b051e9a67dc0d61873e608e80a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::doRound</definition>
        <argsstring>()</argsstring>
        <name>doRound</name>
        <briefdescription>
<para>contain all <ref refid="class_anthill" kindref="compound">Anthill</ref> actions for a round </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="34" column="10" bodyfile="anthill.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1af2bd0764ae0640aedd72ee10c1a60418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::addFood</definition>
        <argsstring>(int foodQuantity)</argsstring>
        <name>addFood</name>
        <param>
          <type>int</type>
          <declname>foodQuantity</declname>
        </param>
        <briefdescription>
<para>method used by anthill that is called by the warrior to increase food quantity via la méthode giveFood </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>foodQuantity</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="36" column="10" bodyfile="anthill.cpp" bodystart="248" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a0acbebd49855ce62b3f30218467338ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Anthill::isQueenAlive</definition>
        <argsstring>()</argsstring>
        <name>isQueenAlive</name>
        <briefdescription>
<para>method used to know if queen is still alive </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="38" column="10" bodyfile="anthill.cpp" bodystart="309" bodyend="311"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_anthill_1a37f3181a47613e31ec78bbfd70daffd7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::doRoundQueen</definition>
        <argsstring>()</argsstring>
        <name>doRoundQueen</name>
        <briefdescription>
<para>manage the <ref refid="class_queen" kindref="compound">Queen</ref>&apos;s round </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="54" column="10" bodyfile="anthill.cpp" bodystart="111" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a006c4f2759a3cb5cb2b51771adcc3042" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::doRoundEggs</definition>
        <argsstring>()</argsstring>
        <name>doRoundEggs</name>
        <briefdescription>
<para>manage eggs age for a round </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="56" column="10" bodyfile="anthill.cpp" bodystart="134" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a10dc28d387e14883c2f2f73b60b50271" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::doRoundLarvas</definition>
        <argsstring>()</argsstring>
        <name>doRoundLarvas</name>
        <briefdescription>
<para>manage larvas round </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="58" column="10" bodyfile="anthill.cpp" bodystart="154" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a03505a5a65d3d9cac82bdfb83db625cc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::doRoundWorkers</definition>
        <argsstring>()</argsstring>
        <name>doRoundWorkers</name>
        <briefdescription>
<para>manage workers round </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="60" column="10" bodyfile="anthill.cpp" bodystart="187" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a102fd88e130c745e9fff50b38ae6f4e6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::growUpToLarva</definition>
        <argsstring>(Egg *egg)</argsstring>
        <name>growUpToLarva</name>
        <param>
          <type><ref refid="class_egg" kindref="compound">Egg</ref> *</type>
          <declname>egg</declname>
        </param>
        <briefdescription>
<para>method used by the anthill to grow egg to larva </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>egg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="62" column="10" bodyfile="anthill.cpp" bodystart="220" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1af6f59868ae7db300e5c650ea0cea2a1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::growUpToWorker</definition>
        <argsstring>(Larva *larva)</argsstring>
        <name>growUpToWorker</name>
        <param>
          <type><ref refid="class_larva" kindref="compound">Larva</ref> *</type>
          <declname>larva</declname>
        </param>
        <briefdescription>
<para>method used by the anthill to grow larva to worker </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>larva</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="64" column="10" bodyfile="anthill.cpp" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a3b1854805b88fac7d7d33096e3fc5577" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::growUpToWarrior</definition>
        <argsstring>(Worker *worker)</argsstring>
        <name>growUpToWarrior</name>
        <param>
          <type><ref refid="class_worker" kindref="compound">Worker</ref> *</type>
          <declname>worker</declname>
        </param>
        <briefdescription>
<para>method used by the anthill to grow worker to warrior </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>worker</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="66" column="10" bodyfile="anthill.cpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1adfea94fd7fa75d08f8c657d97fecdfb8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::createEgg</definition>
        <argsstring>()</argsstring>
        <name>createEgg</name>
        <briefdescription>
<para>method used by the anthill to create one egg </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="68" column="10" bodyfile="anthill.cpp" bodystart="259" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a80a0ca8f374d92072891f67fb8441966" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::createLarva</definition>
        <argsstring>()</argsstring>
        <name>createLarva</name>
        <briefdescription>
<para>method used by the anthill to create one larva </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="70" column="10" bodyfile="anthill.cpp" bodystart="268" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a3f398643ba67c9710e54b1675fc3e1c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Anthill::createWorker</definition>
        <argsstring>()</argsstring>
        <name>createWorker</name>
        <briefdescription>
<para>method used by the anthill to create one worker </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="72" column="10" bodyfile="anthill.cpp" bodystart="277" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_anthill_1a559f93071aa74542e86a8f891778eff0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Anthill::foodCons</definition>
        <argsstring>(int desiredFood)</argsstring>
        <name>foodCons</name>
        <param>
          <type>int</type>
          <declname>desiredFood</declname>
        </param>
        <briefdescription>
<para>method used by the anthill to manage food consumed by the warriors </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>desiredFood</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>available food quantity that can be consumed as an int </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="anthill.h" line="74" column="9" bodyfile="anthill.cpp" bodystart="288" bodyend="303"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Anthill</label>
        <link refid="class_anthill"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Obstacle</label>
        <link refid="class_obstacle"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>Anthill</label>
        <link refid="class_anthill"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>_config</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>_queen</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>Egg</label>
        <link refid="class_egg"/>
      </node>
      <node id="4">
        <label>Queen</label>
        <link refid="class_queen"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>Worker</label>
        <link refid="class_worker"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Obstacle</label>
        <link refid="class_obstacle"/>
      </node>
      <node id="3">
        <label>CONFIG</label>
        <link refid="struct_c_o_n_f_i_g"/>
      </node>
      <node id="6">
        <label>Larva</label>
        <link refid="class_larva"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="anthill.h" line="14" column="1" bodyfile="anthill.h" bodystart="14" bodyend="77"/>
    <listofallmembers>
      <member refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_config</name></member>
      <member refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_currentFood</name></member>
      <member refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_eggs</name></member>
      <member refid="class_obstacle_1a19eb8cda52476027a0429fa5fea6e0e9" prot="protected" virt="non-virtual"><scope>Anthill</scope><name>_height</name></member>
      <member refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_larvas</name></member>
      <member refid="class_anthill_1a0236d40219d628649e35b55e9ad1681e" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_maxFood</name></member>
      <member refid="class_anthill_1a1c85bf4b9dc60899ae1dd37121e786bd" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_maxPop</name></member>
      <member refid="class_anthill_1abf85b8dbefb90401102290d1239e5caf" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_newWarriors</name></member>
      <member refid="class_obstacle_1a18f2015af9237ad50bd1d5f6e610ee14" prot="protected" virt="non-virtual"><scope>Anthill</scope><name>_position</name></member>
      <member refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_queen</name></member>
      <member refid="class_anthill_1ae998f83155953a248872a9078734e820" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_queenAlive</name></member>
      <member refid="class_obstacle_1a4519d71400a5a972093f63dc29aa9283" prot="protected" virt="non-virtual"><scope>Anthill</scope><name>_width</name></member>
      <member refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" prot="private" virt="non-virtual"><scope>Anthill</scope><name>_workers</name></member>
      <member refid="class_anthill_1af2bd0764ae0640aedd72ee10c1a60418" prot="public" virt="non-virtual"><scope>Anthill</scope><name>addFood</name></member>
      <member refid="class_anthill_1a2b5eb754c236e4add4ba4077fb134782" prot="public" virt="non-virtual"><scope>Anthill</scope><name>Anthill</name></member>
      <member refid="class_anthill_1a6c39fdc3e19ce0369e890bb543f9bf0a" prot="public" virt="non-virtual"><scope>Anthill</scope><name>Anthill</name></member>
      <member refid="class_anthill_1adfea94fd7fa75d08f8c657d97fecdfb8" prot="private" virt="non-virtual"><scope>Anthill</scope><name>createEgg</name></member>
      <member refid="class_anthill_1a80a0ca8f374d92072891f67fb8441966" prot="private" virt="non-virtual"><scope>Anthill</scope><name>createLarva</name></member>
      <member refid="class_anthill_1a3f398643ba67c9710e54b1675fc3e1c4" prot="private" virt="non-virtual"><scope>Anthill</scope><name>createWorker</name></member>
      <member refid="class_anthill_1a68a8d3b051e9a67dc0d61873e608e80a" prot="public" virt="non-virtual"><scope>Anthill</scope><name>doRound</name></member>
      <member refid="class_anthill_1a006c4f2759a3cb5cb2b51771adcc3042" prot="private" virt="non-virtual"><scope>Anthill</scope><name>doRoundEggs</name></member>
      <member refid="class_anthill_1a10dc28d387e14883c2f2f73b60b50271" prot="private" virt="non-virtual"><scope>Anthill</scope><name>doRoundLarvas</name></member>
      <member refid="class_anthill_1a37f3181a47613e31ec78bbfd70daffd7" prot="private" virt="non-virtual"><scope>Anthill</scope><name>doRoundQueen</name></member>
      <member refid="class_anthill_1a03505a5a65d3d9cac82bdfb83db625cc" prot="private" virt="non-virtual"><scope>Anthill</scope><name>doRoundWorkers</name></member>
      <member refid="class_anthill_1a559f93071aa74542e86a8f891778eff0" prot="private" virt="non-virtual"><scope>Anthill</scope><name>foodCons</name></member>
      <member refid="class_anthill_1ad7ddaced1d80e90839a7fb80760a59fa" prot="public" virt="non-virtual"><scope>Anthill</scope><name>getNewWarriors</name></member>
      <member refid="class_anthill_1a335795a55847de8ab6da4d09875bacd5" prot="public" virt="non-virtual"><scope>Anthill</scope><name>getPopulation</name></member>
      <member refid="class_obstacle_1a1d5d0250c1154662ebd2b8ee4a8de7e1" prot="public" virt="virtual"><scope>Anthill</scope><name>getPosition</name></member>
      <member refid="class_anthill_1a102fd88e130c745e9fff50b38ae6f4e6" prot="private" virt="non-virtual"><scope>Anthill</scope><name>growUpToLarva</name></member>
      <member refid="class_anthill_1a3b1854805b88fac7d7d33096e3fc5577" prot="private" virt="non-virtual"><scope>Anthill</scope><name>growUpToWarrior</name></member>
      <member refid="class_anthill_1af6f59868ae7db300e5c650ea0cea2a1f" prot="private" virt="non-virtual"><scope>Anthill</scope><name>growUpToWorker</name></member>
      <member refid="class_anthill_1a7ff7e41269324d61bc60360a6fb59a79" prot="public" virt="non-virtual"><scope>Anthill</scope><name>initAnthill</name></member>
      <member refid="class_anthill_1a0acbebd49855ce62b3f30218467338ea" prot="public" virt="non-virtual"><scope>Anthill</scope><name>isQueenAlive</name></member>
      <member refid="class_obstacle_1a8f734072321fa06a7b7dae2d5f50f352" prot="public" virt="non-virtual"><scope>Anthill</scope><name>Obstacle</name></member>
      <member refid="class_obstacle_1ae21c8a847bc1d69fac749f694e2d996c" prot="public" virt="non-virtual"><scope>Anthill</scope><name>Obstacle</name></member>
      <member refid="class_anthill_1aca5a12987317ef7e9780b231aad1c153" prot="public" virt="non-virtual"><scope>Anthill</scope><name>spawnEgg</name></member>
      <member refid="class_anthill_1a0a8a9aa35526e2c65e4520a990a18e18" prot="public" virt="non-virtual"><scope>Anthill</scope><name>~Anthill</name></member>
      <member refid="class_obstacle_1af2f9cc9c6cff75dca0974fd5ac4f71a9" prot="public" virt="non-virtual"><scope>Anthill</scope><name>~Obstacle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
