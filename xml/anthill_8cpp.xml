<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.9.1" xml:lang="en-US">
    <compounddef id="anthill_8cpp" kind="file" language="C++">
        <compoundname>anthill.cpp</compoundname>
        <includes refid="anthill_8h" local="yes">anthill.h</includes>
        <incdepgraph>
            <node id="4">
                <label>obstacle.h</label>
                <link refid="obstacle_8h_source"/>
                <childnode refid="5" relation="include">
                </childnode>
                <childnode refid="6" relation="include">
                </childnode>
            </node>
            <node id="10">
                <label>worker.h</label>
                <link refid="worker_8h_source"/>
                <childnode refid="8" relation="include">
                </childnode>
                <childnode refid="7" relation="include">
                </childnode>
            </node>
            <node id="9">
                <label>egg.h</label>
                <link refid="egg_8h_source"/>
                <childnode refid="5" relation="include">
                </childnode>
                <childnode refid="7" relation="include">
                </childnode>
            </node>
            <node id="7">
                <label>util.h</label>
                <link refid="util_8h_source"/>
            </node>
            <node id="3">
                <label>vector</label>
            </node>
            <node id="2">
                <label>anthill.h</label>
                <link refid="anthill_8h_source"/>
                <childnode refid="3" relation="include">
                </childnode>
                <childnode refid="4" relation="include">
                </childnode>
                <childnode refid="7" relation="include">
                </childnode>
                <childnode refid="8" relation="include">
                </childnode>
                <childnode refid="10" relation="include">
                </childnode>
                <childnode refid="9" relation="include">
                </childnode>
            </node>
            <node id="6">
                <label>utility</label>
            </node>
            <node id="8">
                <label>larva.h</label>
                <link refid="larva_8h_source"/>
                <childnode refid="9" relation="include">
                </childnode>
                <childnode refid="7" relation="include">
                </childnode>
            </node>
            <node id="5">
                <label>iostream</label>
            </node>
            <node id="1">
                <label>anthill.cpp</label>
                <link refid="anthill_8cpp"/>
                <childnode refid="2" relation="include">
                </childnode>
            </node>
        </incdepgraph>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="preprocessor">#include<sp/>&quot;anthill.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal">Anthill::Anthill()</highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal">Anthill::Anthill(
                    <ref refid="struct_c_o_n_f_i_g" kindref="compound">CONFIG</ref>
                    <sp/>&amp;config,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxPop,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>maxFood,<sp/>pair&lt;int,int&gt;<sp/>position,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>width,
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>height)
                </highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_config<sp/>=<sp/>config;
                </highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_maxPop<sp/>=<sp/>maxPop;
                </highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_maxFood<sp/>=<sp/>maxFood;
                </highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;position<sp/>=<sp/>position;
                </highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;width<sp/>=<sp/>width;
                </highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>this-&gt;height<sp/>=<sp/>height;
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal">Anthill::~Anthill()</highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_eggs.erase(_eggs.begin(),<sp/>_eggs.end());
                </highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas.erase(_larvas.begin(),<sp/>_larvas.end());
                </highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers.erase(_workers.begin(),<sp/>_workers.end());
                </highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>Anthill::getNewWarriors()
                </highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>_newWarriors;
                </highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal"></highlight>
                <highlight class="comment">//PUBLIC</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::initAnthill()
                </highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_queen<sp/>=<sp/>new<sp/>Queen(_config);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>cout<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;Init<sp/>anthill<sp/>with<sp/>:<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>_config.nbEggInit<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>eggs,<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>_config.nbLarvaInit<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>larvas
                    <sp/>
                    <sp/>and<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>_config.nbWorkerInit<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;<sp/>workers&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>endl;
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;
                    <sp/>
                    <sp/>i<sp/>&lt;<sp/>_config.nbEggInit;<sp/>i++){
                </highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Anthill::createEgg();
                </highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;
                    <sp/>
                    <sp/>i<sp/>&lt;<sp/>_config.nbLarvaInit;<sp/>i++){
                </highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Anthill::createLarva();
                </highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;
                    <sp/>
                    <sp/>i<sp/>&lt;<sp/>_config.nbWorkerInit;<sp/>i++){
                </highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Anthill::createWorker();
                </highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::spawnEgg()
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>cout<sp/>&lt;&lt;<sp/>
                </highlight>
                <highlight class="stringliteral">&quot;spawn<sp/>&quot;
                </highlight>
                <highlight class="normal"><sp/>&lt;&lt;<sp/>endl;
                </highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>lucky<sp/>=
                    <sp/>
                    <sp/>rand()<sp/>%<sp/>100;
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(lucky<sp/>==<sp/>1)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>newEggs<sp/>=<sp/>rand()<sp/>%<sp/>5<sp/>+<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Today<sp/>the<sp/>Queen<sp/>blessed<sp/>us<sp/>
                    with<sp/>&quot;<sp/>&lt;&lt;<sp/>newEggs<sp/>&lt;&lt;&quot;<sp/>new<sp/>eggs!<sp/>Long<sp/>live<sp/>
                    the<sp/>Queen!&quot;<sp/>&lt;&lt;<sp/>
                    <sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>newEggs;<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>createEgg();
                </highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::doRound()
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_newWarriors<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>doRoundQueen();
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>doRoundEggs();
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>doRoundLarvas();
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>doRoundWorkers();
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>spawnEgg();
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal"></highlight>
                <highlight class="comment">//PRIVATE</highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="comment"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::doRoundQueen()
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_queen-&gt;increaseAge();
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_queen-&gt;starve();
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>if(_queen-&gt;getCurrentHealth()<sp/>&lt;=<sp/>0)<sp/>{
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>delete<sp/>_queen;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::doRoundEggs()
                </highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>vector&lt;Egg<sp/>*&gt;<sp/>newEggs;
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>_eggs.size();<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_eggs[i]-&gt;increaseAge();
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>has<sp/>to<sp/>grow,<sp/>we<sp/>add<sp/>its
                    <sp/>index<sp/>to<sp/>the<sp/>growing<sp/>list<sp/>and<sp/>we<sp/>go<sp/>to<sp/>the<sp/>next<sp/>ant
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_eggs[i]-&gt;getCurrentAge()<sp/>==<sp/>_config.ageLarva)
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;grow<sp/>&quot;&lt;&lt;_eggs[i]-&gt;getName()
                    <sp/>&lt;&lt;<sp/>&quot;<sp/>i<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>growingEggs.push_back(i);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>growUpToLarva(_eggs[i]);
                </highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_eggs.erase(_eggs.begin()+i);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newEggs.push_back(_eggs[i]);
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>_eggs[i]-&gt;getName()<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_eggs.clear();
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_eggs<sp/>=<sp/>newEggs;
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;end<sp/>eggs&quot;<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::doRoundLarvas()
                </highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>Larvas<sp/>treatment
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>vector&lt;Larva<sp/>*&gt;<sp/>newLarvas;
                </highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">bool</highlight>
                <highlight class="normal"><sp/>added<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>_larvas.size();<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>added<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">false</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas[i]-&gt;increaseAge();
                </highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas[i]-&gt;starve();
                </highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>not<sp/>dead,<sp/>we<sp/>add<sp/>it<sp/>
                    to<sp/>the<sp/>new<sp/>ant<sp/>list
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_larvas[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">delete</highlight>
                <highlight class="normal"><sp/>_larvas[i];
                </highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">continue</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>has<sp/>to<sp/>grow,<sp/>we<sp/>add<sp/>its
                    <sp/>index<sp/>to<sp/>the<sp/>growing<sp/>list<sp/>and<sp/>we<sp/>go<sp/>to<sp/>the<sp/>next<sp/>ant
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_larvas[i]-&gt;getCurrentAge()<sp/>==<sp/>_config.ageWorker)
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>growingLarvas.push_back(i);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>growUpToWorker(_larvas[i]);
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas.erase(_larvas.begin()+i);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newLarvas.push_back(_larvas[i]);
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>at<sp/>half<sp/>is<sp/>life,<sp/>we<sp/>
                    give<sp/>food<sp/>to<sp/>it<sp/>if<sp/>possible
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_larvas[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>(_config.lifeLarva/2))
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_currentFood<sp/>&gt;<sp/>0<sp/>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>heal<sp/>=<sp/>rand()<sp/>%<sp/>_currentFood<sp/>+<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas[i]-&gt;heal(foodCons(heal));
                </highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>-=<sp/>heal;
                </highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas.clear();
                </highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas<sp/>=<sp/>newLarvas;
                </highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>for(unsigned<sp/>int<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>growingLarvas.size();<sp/>i++)
                    <sp/>{
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>growUpToWorker(_larvas[growingLarvas[i]]);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas.erase(_larvas.begin()+growingLarvas[i]);
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal"></highlight>
                <highlight class="comment">//
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::doRoundWorkers()
                </highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>vector&lt;Worker<sp/>*&gt;<sp/>newWorkers;
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal">(</highlight>
                <highlight class="keywordtype">unsigned</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>_workers.size();<sp/>i++)
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;workers<sp/>round&quot;<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers[i]-&gt;increaseAge();
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers[i]-&gt;starve();
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>not<sp/>dead,<sp/>we<sp/>add<sp/>it<sp/>
                    to<sp/>the<sp/>new<sp/>ant<sp/>list
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_workers[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">delete</highlight>
                <highlight class="normal"><sp/>_workers[i];
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">continue</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>has<sp/>to<sp/>grow,<sp/>we<sp/>add<sp/>its
                    <sp/>index<sp/>to<sp/>the<sp/>growing<sp/>list<sp/>and<sp/>we<sp/>go<sp/>to<sp/>the<sp/>next<sp/>ant
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_workers[i]-&gt;getCurrentAge()<sp/>==<sp/>_config.ageWarrior)
                </highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>growUpToWarrior(_workers[i]);
                </highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal"><sp/>{
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>newWorkers.push_back(_workers[i]);
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>at<sp/>half<sp/>is<sp/>life,<sp/>we<sp/>
                    give<sp/>food<sp/>to<sp/>it<sp/>if<sp/>possible
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_workers[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>(_config.lifeLarva/2))
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_currentFood<sp/>&gt;<sp/>0<sp/>)<sp/>{
                </highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>heal<sp/>=<sp/>rand()<sp/>%<sp/>_currentFood<sp/>+<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers[i]-&gt;heal(foodCons(heal));
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>-=<sp/>heal;
                </highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers.clear();
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers<sp/>=<sp/>newWorkers;
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::growUpToLarva(<ref refid="class_egg" kindref="compound">
                    Egg</ref>*<sp/>egg)
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Anthill::createLarva();
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Egg<sp/>&quot;<sp/>&lt;&lt;<sp/>egg-&gt;getName()
                    <sp/>&lt;&lt;<sp/>&quot;<sp/>is<sp/>becoming<sp/>a<sp/>larva!<sp/>We&apos;re<sp/>so<sp/>proud<sp/>of
                    <sp/>it!&quot;<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">delete</highlight>
                <highlight class="normal"><sp/>egg;
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::growUpToWorker(<ref refid="class_larva" kindref="compound">
                    Larva</ref>*<sp/>larva)
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>Anthill::createWorker();
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Larva<sp/>&quot;<sp/>&lt;&lt;<sp/>larva-&gt;getName()
                    <sp/>&lt;&lt;<sp/>&quot;<sp/>is<sp/>becoming<sp/>a<sp/>worker!<sp/>We&apos;re<sp/>so<sp/>proud<sp/>
                    of<sp/>it!&quot;<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">delete</highlight>
                <highlight class="normal"><sp/>larva;
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::growUpToWarrior(<ref refid="class_worker" kindref="compound">
                    Worker</ref>*<sp/>worker)
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_newWarriors<sp/>+=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Warrior<sp/>&quot;<sp/>&lt;&lt;<sp/>worker-&gt;getName()
                    <sp/>&lt;&lt;<sp/>&quot;<sp/>is<sp/>becoming<sp/>a<sp/>warrior!<sp/>We&apos;re<sp/>so<sp/>proud<sp/>
                    of<sp/>it!&quot;<sp/>&lt;&lt;<sp/>endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keyword">delete</highlight>
                <highlight class="normal"><sp/>worker;
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::addFood(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>foodQuantity)
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="222">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>+=<sp/>foodQuantity;
                </highlight>
            </codeline>
            <codeline lineno="223">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(_currentFood<sp/>&gt;<sp/>_maxFood)
                </highlight>
            </codeline>
            <codeline lineno="224">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="225">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>=<sp/>_maxFood;
                </highlight>
            </codeline>
            <codeline lineno="226">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="227">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;Anthill<sp/>recived<sp/>&quot;&lt;&lt;<sp/>
                    foodQuantity<sp/>&lt;&lt;&quot;<sp/>of<sp/>food!<sp/>----------------------------------&quot;<sp/>&lt;&lt;<sp/>
                    endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="228">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;\t<sp/>*<sp/>New<sp/>Food<sp/>quantity<sp/>:
                    <sp/>&quot;<sp/>&lt;&lt;<sp/>_currentFood<sp/>&lt;&lt;&quot;/&quot;<sp/>&lt;&lt;<sp/>_maxFood<sp/>&lt;&lt;<sp/>
                    endl;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="229">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="230">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="231">
                <highlight class="normal"></highlight>
                <highlight class="comment">//PRIVATE</highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="232">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::createEgg()
                </highlight>
            </codeline>
            <codeline lineno="233">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="234">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal"><sp/>name<sp/>=
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;egg&quot;</highlight>
                <highlight class="normal"><sp/>+<sp/>to_string(_eggs.size());
                </highlight>
            </codeline>
            <codeline lineno="235">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_egg" kindref="compound">Egg</ref>
                    <sp/>*egg<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_egg" kindref="compound">Egg</ref>(name);
                </highlight>
            </codeline>
            <codeline lineno="236">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_eggs.push_back(egg);
                </highlight>
            </codeline>
            <codeline lineno="237">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="238">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="239">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::createLarva()
                </highlight>
            </codeline>
            <codeline lineno="240">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="241">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal"><sp/>name<sp/>=
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;larva&quot;</highlight>
                <highlight class="normal"><sp/>+<sp/>to_string(_larvas.size());
                </highlight>
            </codeline>
            <codeline lineno="242">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_larva" kindref="compound">Larva</ref>
                    <sp/>*larva<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_larva" kindref="compound">Larva</ref>(_config,<sp/>name);
                </highlight>
            </codeline>
            <codeline lineno="243">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_larvas.push_back(larva);
                </highlight>
            </codeline>
            <codeline lineno="244">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="245">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="246">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal"><sp/>Anthill::createWorker()
                </highlight>
            </codeline>
            <codeline lineno="247">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="248">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">string</highlight>
                <highlight class="normal"><sp/>name<sp/>=
                    <sp/>
                </highlight>
                <highlight class="stringliteral">&quot;worker&quot;</highlight>
                <highlight class="normal"><sp/>+<sp/>to_string(_workers.size());
                </highlight>
            </codeline>
            <codeline lineno="249">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="class_worker" kindref="compound">Worker</ref>
                    <sp/>*worker<sp/>=
                    <sp/>
                </highlight>
                <highlight class="keyword">new</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="class_worker" kindref="compound">Worker</ref>(_config,<sp/>name);
                </highlight>
            </codeline>
            <codeline lineno="250">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_workers.push_back(worker);
                </highlight>
            </codeline>
            <codeline lineno="251">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="252">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="253">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>Anthill::foodCons(
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>desiredFood)
                </highlight>
            </codeline>
            <codeline lineno="254">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="255">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>availableCons<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="256">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(_currentFood<sp/>==<sp/>0<sp/>)
                </highlight>
            </codeline>
            <codeline lineno="257">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="258">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="259">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="260">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(desiredFood<sp/>&gt;<sp/>_currentFood)
                </highlight>
            </codeline>
            <codeline lineno="261">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="262">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>availableCons<sp/>=<sp/>_currentFood;
                </highlight>
            </codeline>
            <codeline lineno="263">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="264">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                    <sp/>
                </highlight>
                <highlight class="keywordflow">else</highlight>
                <highlight class="normal">
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal">(desiredFood<sp/>&lt;=<sp/>_currentFood)
                </highlight>
            </codeline>
            <codeline lineno="265">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="266">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>_currentFood<sp/>-=<sp/>desiredFood;
                </highlight>
            </codeline>
            <codeline lineno="267">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>availableCons<sp/>=<sp/>desiredFood;
                </highlight>
            </codeline>
            <codeline lineno="268">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="269">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="270">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal"><sp/>availableCons;
                </highlight>
            </codeline>
            <codeline lineno="271">
                <highlight class="normal">}</highlight>
            </codeline>
        </programlisting>
        <location file="anthill.cpp"/>
    </compounddef>
</doxygen>
