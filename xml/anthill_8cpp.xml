<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="anthill_8cpp" kind="file" language="C++">
    <compoundname>anthill.cpp</compoundname>
    <includes refid="anthill_8h" local="yes">anthill.h</includes>
    <incdepgraph>
      <node id="4">
        <label>obstacle.h</label>
        <link refid="obstacle_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>worker.h</label>
        <link refid="worker_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>egg.h</label>
        <link refid="egg_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>util.h</label>
        <link refid="util_8h"/>
      </node>
      <node id="12">
        <label>random</label>
      </node>
      <node id="11">
        <label>queen.h</label>
        <link refid="queen_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
      <node id="2">
        <label>anthill.h</label>
        <link refid="anthill_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>utility</label>
      </node>
      <node id="8">
        <label>larva.h</label>
        <link refid="larva_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>chrono</label>
      </node>
      <node id="1">
        <label>anthill.cpp</label>
        <link refid="anthill_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="anthill_8h" kindref="compound">anthill.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="class_anthill_1a2b5eb754c236e4add4ba4077fb134782" kindref="member">Anthill::Anthill</ref>()<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><ref refid="class_anthill_1a2b5eb754c236e4add4ba4077fb134782" kindref="member">Anthill::Anthill</ref>(<ref refid="struct_c_o_n_f_i_g" kindref="compound">CONFIG</ref><sp/>&amp;config,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxPop,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFood,<sp/>pair&lt;int,<sp/>int&gt;<sp/>position,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref><sp/>=<sp/>config;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a1c85bf4b9dc60899ae1dd37121e786bd" kindref="member">_maxPop</ref><sp/>=<sp/>maxPop;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a0236d40219d628649e35b55e9ad1681e" kindref="member">_maxFood</ref><sp/>=<sp/>maxFood;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_obstacle_1a18f2015af9237ad50bd1d5f6e610ee14" kindref="member">_position</ref><sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_obstacle_1a4519d71400a5a972093f63dc29aa9283" kindref="member">_width</ref><sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_obstacle_1a19eb8cda52476027a0429fa5fea6e0e9" kindref="member">_height</ref><sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_queen" kindref="compound">Queen</ref>(<ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="class_anthill_1a0a8a9aa35526e2c65e4520a990a18e18" kindref="member">Anthill::~Anthill</ref>()<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.erase(<ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.begin(),<sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.end());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.erase(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.begin(),<sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.end());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.erase(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.begin(),<sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.end());</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1ad7ddaced1d80e90839a7fb80760a59fa" kindref="member">Anthill::getNewWarriors</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1abf85b8dbefb90401102290d1239e5caf" kindref="member">_newWarriors</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a335795a55847de8ab6da4d09875bacd5" kindref="member">Anthill::getPopulation</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.size()<sp/>+<sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.size()<sp/>+<sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.size();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//PUBLIC</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a7ff7e41269324d61bc60360a6fb59a79" kindref="member">Anthill::initAnthill</ref>()<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Init<sp/>anthill<sp/>with<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a99da682bf00d782ebbbf4f1ae4ddcfc0" kindref="member">nbEggInit</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>eggs,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1aca4cfa9612eb0b92b3c56190845be748" kindref="member">nbLarvaInit</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>larvas<sp/><sp/>and<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a891377a6a98538ce720b7299157d9745" kindref="member">nbWorkerInit</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>workers&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1ae998f83155953a248872a9078734e820" kindref="member">_queenAlive</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>=<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a527ab3c6fe268dd7c0e1803ee22e0682" kindref="member">maxFoodAnthill</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a99da682bf00d782ebbbf4f1ae4ddcfc0" kindref="member">nbEggInit</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1adfea94fd7fa75d08f8c657d97fecdfb8" kindref="member">Anthill::createEgg</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1aca4cfa9612eb0b92b3c56190845be748" kindref="member">nbLarvaInit</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a80a0ca8f374d92072891f67fb8441966" kindref="member">Anthill::createLarva</ref>();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a891377a6a98538ce720b7299157d9745" kindref="member">nbWorkerInit</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a3f398643ba67c9710e54b1675fc3e1c4" kindref="member">Anthill::createWorker</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1aca5a12987317ef7e9780b231aad1c153" kindref="member">Anthill::spawnEgg</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>default_random_engine<sp/>re(std::chrono::system_clock::now().time_since_epoch().count());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>uniform_int_distribution&lt;int&gt;<sp/>distrib{0,<sp/>6};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lucky<sp/>=<sp/>distrib(re);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lucky<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uniform_int_distribution&lt;int&gt;<sp/>distrib{0,<sp/>9};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newEggs<sp/>=<sp/>distrib(re);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>newEggs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1adfea94fd7fa75d08f8c657d97fecdfb8" kindref="member">createEgg</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a68a8d3b051e9a67dc0d61873e608e80a" kindref="member">Anthill::doRound</ref>()<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1abf85b8dbefb90401102290d1239e5caf" kindref="member">_newWarriors</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a37f3181a47613e31ec78bbfd70daffd7" kindref="member">doRoundQueen</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a006c4f2759a3cb5cb2b51771adcc3042" kindref="member">doRoundEggs</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a10dc28d387e14883c2f2f73b60b50271" kindref="member">doRoundLarvas</ref>();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a03505a5a65d3d9cac82bdfb83db625cc" kindref="member">doRoundWorkers</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Available<sp/>food<sp/>in<sp/>anthill:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Eggs<sp/>number:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Larvas<sp/>number:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Worker<sp/>number:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.size()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//PRIVATE</highlight></codeline>
<codeline lineno="111"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a37f3181a47613e31ec78bbfd70daffd7" kindref="member">Anthill::doRoundQueen</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1ae998f83155953a248872a9078734e820" kindref="member">_queenAlive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref>-&gt;<ref refid="class_egg_1a6d90db3b102903ce9e53f07a16c7403d" kindref="member">increaseAge</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref>-&gt;<ref refid="class_larva_1aa98638a241743fe9b0eab9267593e143" kindref="member">starve</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref>-&gt;<ref refid="class_larva_1aa02ca1d9e4b69832742214094e48cbd0" kindref="member">getCurrentHealth</ref>()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1ae998f83155953a248872a9078734e820" kindref="member">_queenAlive</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>at<sp/>half<sp/>is<sp/>life,<sp/>we<sp/>give<sp/>food<sp/>to<sp/>it<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref>-&gt;<ref refid="class_larva_1aa02ca1d9e4b69832742214094e48cbd0" kindref="member">getCurrentHealth</ref>()<sp/>&lt;=<sp/>(<ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a89904d8c21627914cdfba6033fbc12d4" kindref="member">lifeQueen</ref><sp/>/<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heal<sp/>=<sp/>rand()<sp/>%<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a24d3cd883be1897ca9b577fa09dfc1c4" kindref="member">_queen</ref>-&gt;<ref refid="class_larva_1adbe862633e03ac3ec06230353b222767" kindref="member">heal</ref>(<ref refid="class_anthill_1a559f93071aa74542e86a8f891778eff0" kindref="member">foodCons</ref>(heal));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a006c4f2759a3cb5cb2b51771adcc3042" kindref="member">Anthill::doRoundEggs</ref>()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>vector<sp/>&lt;<sp/>Egg<sp/>*<sp/>&gt;<sp/>newEggs;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>[i]-&gt;increaseAge();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>has<sp/>to<sp/>grow,<sp/>we<sp/>add<sp/>its<sp/>index<sp/>to<sp/>the<sp/>growing<sp/>list<sp/>and<sp/>we<sp/>go<sp/>to<sp/>the<sp/>next<sp/>ant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>[i]-&gt;getCurrentAge()<sp/>==<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1adaef13114c96052ed48fd5b1c2f71751" kindref="member">ageLarva</ref>)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a102fd88e130c745e9fff50b38ae6f4e6" kindref="member">growUpToLarva</ref>(<ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>[i]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEggs.push_back(<ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>[i]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.clear();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref><sp/>=<sp/>newEggs;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a10dc28d387e14883c2f2f73b60b50271" kindref="member">Anthill::doRoundLarvas</ref>()<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Larvas<sp/>treatment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>vector<sp/>&lt;<sp/>Larva<sp/>*<sp/>&gt;<sp/>newLarvas;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]-&gt;increaseAge();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]-&gt;starve();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>not<sp/>dead,<sp/>we<sp/>add<sp/>it<sp/>to<sp/>the<sp/>new<sp/>ant<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>has<sp/>to<sp/>grow,<sp/>we<sp/>add<sp/>its<sp/>index<sp/>to<sp/>the<sp/>growing<sp/>list<sp/>and<sp/>we<sp/>go<sp/>to<sp/>the<sp/>next<sp/>ant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]-&gt;getCurrentAge()<sp/>==<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1a9eb6b9b497433bc08aa3cb17cba8e653" kindref="member">ageWorker</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1af6f59868ae7db300e5c650ea0cea2a1f" kindref="member">growUpToWorker</ref>(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newLarvas.push_back(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>at<sp/>half<sp/>is<sp/>life,<sp/>we<sp/>give<sp/>food<sp/>to<sp/>it<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>(<ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1ac5af4472e37f58a99db6462c6ab26489" kindref="member">lifeLarva</ref><sp/>/<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heal<sp/>=<sp/>rand()<sp/>%<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>[i]-&gt;heal(<ref refid="class_anthill_1a559f93071aa74542e86a8f891778eff0" kindref="member">foodCons</ref>(heal));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.clear();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref><sp/>=<sp/>newLarvas;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a03505a5a65d3d9cac82bdfb83db625cc" kindref="member">Anthill::doRoundWorkers</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>vector<sp/>&lt;<sp/>Worker<sp/>*<sp/>&gt;<sp/>newWorkers;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]-&gt;increaseAge();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]-&gt;starve();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>not<sp/>dead,<sp/>we<sp/>add<sp/>it<sp/>to<sp/>the<sp/>new<sp/>ant<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>has<sp/>to<sp/>grow,<sp/>we<sp/>add<sp/>its<sp/>index<sp/>to<sp/>the<sp/>growing<sp/>list<sp/>and<sp/>we<sp/>go<sp/>to<sp/>the<sp/>next<sp/>ant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]-&gt;getCurrentAge()<sp/>==<sp/><ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1aa20147d7048b5a3644ff7de40e5b4a0d" kindref="member">ageWarrior</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a3b1854805b88fac7d7d33096e3fc5577" kindref="member">growUpToWarrior</ref>(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWorkers.push_back(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>ant<sp/>is<sp/>at<sp/>half<sp/>is<sp/>life,<sp/>we<sp/>give<sp/>food<sp/>to<sp/>it<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]-&gt;getCurrentHealth()<sp/>&lt;=<sp/>(<ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>.<ref refid="struct_c_o_n_f_i_g_1ac5af4472e37f58a99db6462c6ab26489" kindref="member">lifeLarva</ref><sp/>/<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>heal<sp/>=<sp/>rand()<sp/>%<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>+<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>[i]-&gt;heal(<ref refid="class_anthill_1a559f93071aa74542e86a8f891778eff0" kindref="member">foodCons</ref>(heal));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.clear();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref><sp/>=<sp/>newWorkers;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a102fd88e130c745e9fff50b38ae6f4e6" kindref="member">Anthill::growUpToLarva</ref>(<ref refid="class_egg" kindref="compound">Egg</ref><sp/>*egg)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a80a0ca8f374d92072891f67fb8441966" kindref="member">Anthill::createLarva</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>egg;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1af6f59868ae7db300e5c650ea0cea2a1f" kindref="member">Anthill::growUpToWorker</ref>(<ref refid="class_larva" kindref="compound">Larva</ref><sp/>*larva)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a3f398643ba67c9710e54b1675fc3e1c4" kindref="member">Anthill::createWorker</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>larva;</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a3b1854805b88fac7d7d33096e3fc5577" kindref="member">Anthill::growUpToWarrior</ref>(<ref refid="class_worker" kindref="compound">Worker</ref><sp/>*worker)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1abf85b8dbefb90401102290d1239e5caf" kindref="member">_newWarriors</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>worker;</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1af2bd0764ae0640aedd72ee10c1a60418" kindref="member">Anthill::addFood</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>foodQuantity)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>+=<sp/>foodQuantity;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>&gt;<sp/><ref refid="class_anthill_1a0236d40219d628649e35b55e9ad1681e" kindref="member">_maxFood</ref>)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>=<sp/><ref refid="class_anthill_1a0236d40219d628649e35b55e9ad1681e" kindref="member">_maxFood</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//PRIVATE</highlight></codeline>
<codeline lineno="259"><highlight class="comment"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1adfea94fd7fa75d08f8c657d97fecdfb8" kindref="member">Anthill::createEgg</ref>()<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;egg&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.size());</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_egg" kindref="compound">Egg</ref><sp/>*egg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_egg" kindref="compound">Egg</ref>(name);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a679c378ae33e2483b73f4e873ed0878c" kindref="member">_eggs</ref>.push_back(egg);</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a80a0ca8f374d92072891f67fb8441966" kindref="member">Anthill::createLarva</ref>()<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;larva&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.size());</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_larva" kindref="compound">Larva</ref><sp/>*larva<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_larva" kindref="compound">Larva</ref>(<ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1afc8cc3ccd45701fe26fa35b4f8696f04" kindref="member">_larvas</ref>.push_back(larva);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a3f398643ba67c9710e54b1675fc3e1c4" kindref="member">Anthill::createWorker</ref>()<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;worker&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.size());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_worker" kindref="compound">Worker</ref><sp/>*worker<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_worker" kindref="compound">Worker</ref>(<ref refid="class_anthill_1a5ce3eeda78bd506d69605907d921872f" kindref="member">_config</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a92cfa9df16dcac810eb7410712164bed" kindref="member">_workers</ref>.push_back(worker);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a559f93071aa74542e86a8f891778eff0" kindref="member">Anthill::foodCons</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>desiredFood)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>availableCons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desiredFood<sp/>&gt;<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref>)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableCons<sp/>=<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desiredFood<sp/>&lt;=<sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_anthill_1a5aae123ca7c7ad1b6c84e3fc9e3368a6" kindref="member">_currentFood</ref><sp/>-=<sp/>desiredFood;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>availableCons<sp/>=<sp/>desiredFood;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>availableCons;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1a0acbebd49855ce62b3f30218467338ea" kindref="member">Anthill::isQueenAlive</ref>()<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_anthill_1ae998f83155953a248872a9078734e820" kindref="member">_queenAlive</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="anthill.cpp"/>
  </compounddef>
</doxygen>
