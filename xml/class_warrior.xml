<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_warrior" kind="class" language="C++" prot="public">
    <compoundname>Warrior</compoundname>
    <basecompoundref refid="class_worker" prot="public" virt="non-virtual">Worker</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_warrior_1ad9757eeba69475bbf211040c24e84c63" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Warrior::_foodCapacity</definition>
        <argsstring></argsstring>
        <name>_foodCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="41" column="9" bodyfile="warrior.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_warrior_1a44b63505023fc315f976b3876e2f9b61" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Warrior::_currentFood</definition>
        <argsstring></argsstring>
        <name>_currentFood</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="42" column="9" bodyfile="warrior.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_warrior_1ae1897ab85118e334f8cf2f2f797c114e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Warrior::_mode</definition>
        <argsstring></argsstring>
        <name>_mode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="43" column="9" bodyfile="warrior.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_warrior_1a09864b2710b33d5803b6df857435e66a" prot="private" static="no" mutable="no">
        <type>pair&lt; int, int &gt;</type>
        <definition>pair&lt;int, int&gt; Warrior::_position</definition>
        <argsstring></argsstring>
        <name>_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="44" column="10" bodyfile="warrior.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_warrior_1a0ec388a0e49599d20d535adfad0263c3" prot="private" static="no" mutable="no">
        <type>pair&lt; int, int &gt;</type>
        <definition>pair&lt;int, int&gt; Warrior::_prevPos</definition>
        <argsstring></argsstring>
        <name>_prevPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="45" column="10" bodyfile="warrior.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_warrior_1a5bc5947cf97abb73144cd19a40942238" prot="private" static="no" mutable="no">
        <type><ref refid="class_anthill" kindref="compound">Anthill</ref> *</type>
        <definition>Anthill* Warrior::_anthill</definition>
        <argsstring></argsstring>
        <name>_anthill</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="46" column="13" bodyfile="warrior.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_warrior_1a514c253a8e9c3f845f11f344804335d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Warrior::Warrior</definition>
        <argsstring>()</argsstring>
        <name>Warrior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="13" column="5" bodyfile="warrior.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1af271d54079a347aa6a5c6a2805daf7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Warrior::Warrior</definition>
        <argsstring>(pair&lt; int, int &gt; position, string name, Anthill *anthill, CONFIG &amp;config)</argsstring>
        <name>Warrior</name>
        <param>
          <type>pair&lt; int, int &gt;</type>
          <declname>position</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_anthill" kindref="compound">Anthill</ref> *</type>
          <declname>anthill</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_n_f_i_g" kindref="compound">CONFIG</ref> &amp;</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>main constructor of warrior </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>anthill</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="15" column="5" bodyfile="warrior.cpp" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1aab6dc963d8e8e13517e5a9e5fa74aaaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Warrior::~Warrior</definition>
        <argsstring>()</argsstring>
        <name>~Warrior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="17" column="5" bodyfile="warrior.cpp" bodystart="36" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1ad3f4db2c2df1559c6cb1bbd56fbba2e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const pair&lt; int, int &gt;</type>
        <definition>const pair&lt; int, int &gt; Warrior::getPosition</definition>
        <argsstring>()</argsstring>
        <name>getPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="19" column="16" bodyfile="warrior.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1ae20cc62958d7e76559213d5ef6740242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const pair&lt; int, int &gt;</type>
        <definition>pair&lt; int, int &gt; const Warrior::getPrevPos</definition>
        <argsstring>()</argsstring>
        <name>getPrevPos</name>
        <briefdescription>
<para>return the position at the round n-1 of the warrior </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>return the previous position as pair&lt;int,int&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="21" column="16" bodyfile="warrior.cpp" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1a3346c2a6bd3aff2e6ce00ccaf8689285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Warrior::explore</definition>
        <argsstring>(vector&lt; pair&lt; int, int &gt;&gt; forbiddenPositions)</argsstring>
        <name>explore</name>
        <param>
          <type>vector&lt; pair&lt; int, int &gt;&gt;</type>
          <declname>forbiddenPositions</declname>
        </param>
        <briefdescription>
<para>moving method for warrior based on random moves </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forbiddenPositions</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="23" column="10" bodyfile="warrior.cpp" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1a36fabf05ac60a23af9d7f7fb940cfc9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Warrior::returnToAnthill</definition>
        <argsstring>(vector&lt; pair&lt; int, int &gt;&gt; forbiddenPositions)</argsstring>
        <name>returnToAnthill</name>
        <param>
          <type>vector&lt; pair&lt; int, int &gt;&gt;</type>
          <declname>forbiddenPositions</declname>
        </param>
        <briefdescription>
<para>moving method for warrior based on the idea that the warrior know the path </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forbiddenPositions</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="25" column="10" bodyfile="warrior.cpp" bodystart="80" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1a8660e68f16b482e46cb838f627fc94c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Warrior::takeFood</definition>
        <argsstring>(int availableQuantity)</argsstring>
        <name>takeFood</name>
        <param>
          <type>int</type>
          <declname>availableQuantity</declname>
        </param>
        <briefdescription>
<para>indicates to the ant that she can take the given quantity of food </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>availableQuantity</parametername>
</parameternamelist>
<parameterdescription>
<para>quantity of food the ant can take, this does not mean that the ant will take it all </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the actual taken quantity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="27" column="9" bodyfile="warrior.cpp" bodystart="220" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1aa3620b12e2a5e0c0edc5ce5a2cb43d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Warrior::attack</definition>
        <argsstring>()</argsstring>
        <name>attack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="29" column="10" bodyfile="warrior.cpp" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1aa48d40a851d3a3790eb1b980e50fd255" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Warrior::giveFood</definition>
        <argsstring>()</argsstring>
        <name>giveFood</name>
        <briefdescription>
<para>interaction method that warriors use to put food in the <ref refid="class_anthill" kindref="compound">Anthill</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="31" column="10" bodyfile="warrior.cpp" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1a780a0b83407f54b3436b1b4be5c144ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Warrior::getMode</definition>
        <argsstring>() const</argsstring>
        <name>getMode</name>
        <briefdescription>
<para>method used to access the movement mode of the warrior mode = 1 : Exploration mode, the ant is looking for food mode = 2 : Return to anthill, the ant is carring food and taking it back to the anthill </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current mode </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="33" column="9" bodyfile="warrior.cpp" bodystart="335" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1a4bc9809c4d99995f6793d47a38da1eb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Warrior::getCurrentFood</definition>
        <argsstring>() const</argsstring>
        <name>getCurrentFood</name>
        <briefdescription>
<para>method used to access food level of a warrior </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="35" column="9" bodyfile="warrior.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1abf1ab498912f05c443fc997a2e50974d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Warrior::setCurrentFood</definition>
        <argsstring>(unsigned int food)</argsstring>
        <name>setCurrentFood</name>
        <param>
          <type>unsigned int</type>
          <declname>food</declname>
        </param>
        <briefdescription>
<para>method used to set the food level of a warrior </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>food</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="37" column="10" bodyfile="warrior.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_warrior_1ab125312bf657eb9c7e9c4e713bbbafcd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Warrior::checkPosition</definition>
        <argsstring>(vector&lt; pair&lt; int, int &gt;&gt; forbiddenPositions, int posX, int posY)</argsstring>
        <name>checkPosition</name>
        <param>
          <type>vector&lt; pair&lt; int, int &gt;&gt;</type>
          <declname>forbiddenPositions</declname>
        </param>
        <param>
          <type>int</type>
          <declname>posX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>posY</declname>
        </param>
        <briefdescription>
<para>iterate through the forbidden positions to check if the given X and Y are available </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forbiddenPositions</parametername>
</parameternamelist>
<parameterdescription>
<para>list of impossible move for the ant </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>posX</parametername>
</parameternamelist>
<parameterdescription>
<para>the X coordinate you want to check </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>posY</parametername>
</parameternamelist>
<parameterdescription>
<para>the Y coordinate you want to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the position is available, false if not </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="49" column="10" bodyfile="warrior.cpp" bodystart="320" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1addb38f2991fb13a6d6919539ff0b5dcf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pair&lt; int, int &gt;</type>
        <definition>pair&lt; int, int &gt; Warrior::getRandomPos</definition>
        <argsstring>(vector&lt; pair&lt; int, int &gt;&gt; forbiddenPositions, int prevX, int prevY, int posX, int posY)</argsstring>
        <name>getRandomPos</name>
        <param>
          <type>vector&lt; pair&lt; int, int &gt;&gt;</type>
          <declname>forbiddenPositions</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prevX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>prevY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>posX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>posY</declname>
        </param>
        <briefdescription>
<para>gives a random position considering the previous position of the ant, the current position and the forbidden </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>forbiddenPositions</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevX</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevY</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>posX</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>posY</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a proposition of available position </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="51" column="10" bodyfile="warrior.cpp" bodystart="259" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_warrior_1a9fa41656c1f5e79d32799eb6df913ad6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Warrior::isNextTo</definition>
        <argsstring>(int antX, int antY, int objX, int objY)</argsstring>
        <name>isNextTo</name>
        <param>
          <type>int</type>
          <declname>antX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>antY</declname>
        </param>
        <param>
          <type>int</type>
          <declname>objX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>objY</declname>
        </param>
        <briefdescription>
<para>methods used to tell if your ant is next to an object </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>myX</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>myY</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>objX</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>objY</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="warrior.h" line="53" column="10" bodyfile="warrior.cpp" bodystart="347" bodyend="353"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>Egg</label>
        <link refid="class_egg"/>
      </node>
      <node id="1">
        <label>Warrior</label>
        <link refid="class_warrior"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Worker</label>
        <link refid="class_worker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Larva</label>
        <link refid="class_larva"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>Egg</label>
        <link refid="class_egg"/>
      </node>
      <node id="1">
        <label>Warrior</label>
        <link refid="class_warrior"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Worker</label>
        <link refid="class_worker"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Larva</label>
        <link refid="class_larva"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="warrior.h" line="10" column="1" bodyfile="warrior.h" bodystart="10" bodyend="55"/>
    <listofallmembers>
      <member refid="class_warrior_1a5bc5947cf97abb73144cd19a40942238" prot="private" virt="non-virtual"><scope>Warrior</scope><name>_anthill</name></member>
      <member refid="class_egg_1a5943a93f9bb3c8e785ae5ca491776440" prot="protected" virt="non-virtual"><scope>Warrior</scope><name>_currentAge</name></member>
      <member refid="class_warrior_1a44b63505023fc315f976b3876e2f9b61" prot="private" virt="non-virtual"><scope>Warrior</scope><name>_currentFood</name></member>
      <member refid="class_larva_1a6c110f254d97b23fface50ba929dc316" prot="protected" virt="non-virtual"><scope>Warrior</scope><name>_currentHealth</name></member>
      <member refid="class_warrior_1ad9757eeba69475bbf211040c24e84c63" prot="private" virt="non-virtual"><scope>Warrior</scope><name>_foodCapacity</name></member>
      <member refid="class_larva_1aff0c81a8dda39bbb4ab10553d7c47c69" prot="protected" virt="non-virtual"><scope>Warrior</scope><name>_foodCons</name></member>
      <member refid="class_larva_1a8c51a31397bcc72b39b5b79e5d5dfc98" prot="protected" virt="non-virtual"><scope>Warrior</scope><name>_maxHealth</name></member>
      <member refid="class_warrior_1ae1897ab85118e334f8cf2f2f797c114e" prot="private" virt="non-virtual"><scope>Warrior</scope><name>_mode</name></member>
      <member refid="class_egg_1a57ca36eb21771f70b66b52f3273c1479" prot="protected" virt="non-virtual"><scope>Warrior</scope><name>_name</name></member>
      <member refid="class_warrior_1a09864b2710b33d5803b6df857435e66a" prot="private" virt="non-virtual"><scope>Warrior</scope><name>_position</name></member>
      <member refid="class_warrior_1a0ec388a0e49599d20d535adfad0263c3" prot="private" virt="non-virtual"><scope>Warrior</scope><name>_prevPos</name></member>
      <member refid="class_warrior_1aa3620b12e2a5e0c0edc5ce5a2cb43d02" prot="public" virt="non-virtual"><scope>Warrior</scope><name>attack</name></member>
      <member refid="class_warrior_1ab125312bf657eb9c7e9c4e713bbbafcd" prot="private" virt="non-virtual"><scope>Warrior</scope><name>checkPosition</name></member>
      <member refid="class_egg_1a7bc49a621a55e7236415ad5da41d3b54" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Egg</name></member>
      <member refid="class_egg_1a90ffc2d1e1f8bc43e871e47e1d1f80aa" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Egg</name></member>
      <member refid="class_warrior_1a3346c2a6bd3aff2e6ce00ccaf8689285" prot="public" virt="non-virtual"><scope>Warrior</scope><name>explore</name></member>
      <member refid="class_egg_1a56270a17b03c82f769bb97bbbabd91f5" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getCurrentAge</name></member>
      <member refid="class_warrior_1a4bc9809c4d99995f6793d47a38da1eb1" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getCurrentFood</name></member>
      <member refid="class_larva_1aa02ca1d9e4b69832742214094e48cbd0" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getCurrentHealth</name></member>
      <member refid="class_warrior_1a780a0b83407f54b3436b1b4be5c144ed" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getMode</name></member>
      <member refid="class_egg_1ad6892cf4ac2739b9e8346db7a541ce1f" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getName</name></member>
      <member refid="class_warrior_1ad3f4db2c2df1559c6cb1bbd56fbba2e9" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getPosition</name></member>
      <member refid="class_warrior_1ae20cc62958d7e76559213d5ef6740242" prot="public" virt="non-virtual"><scope>Warrior</scope><name>getPrevPos</name></member>
      <member refid="class_warrior_1addb38f2991fb13a6d6919539ff0b5dcf" prot="private" virt="non-virtual"><scope>Warrior</scope><name>getRandomPos</name></member>
      <member refid="class_warrior_1aa48d40a851d3a3790eb1b980e50fd255" prot="public" virt="non-virtual"><scope>Warrior</scope><name>giveFood</name></member>
      <member refid="class_larva_1adbe862633e03ac3ec06230353b222767" prot="public" virt="non-virtual"><scope>Warrior</scope><name>heal</name></member>
      <member refid="class_egg_1a6d90db3b102903ce9e53f07a16c7403d" prot="public" virt="non-virtual"><scope>Warrior</scope><name>increaseAge</name></member>
      <member refid="class_warrior_1a9fa41656c1f5e79d32799eb6df913ad6" prot="private" virt="non-virtual"><scope>Warrior</scope><name>isNextTo</name></member>
      <member refid="class_larva_1a4b111b5a13f5d3b1fb7121ac79824fe4" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Larva</name></member>
      <member refid="class_larva_1a34766742688547c5295f578da74ac080" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Larva</name></member>
      <member refid="class_warrior_1a36fabf05ac60a23af9d7f7fb940cfc9d" prot="public" virt="non-virtual"><scope>Warrior</scope><name>returnToAnthill</name></member>
      <member refid="class_warrior_1abf1ab498912f05c443fc997a2e50974d" prot="public" virt="non-virtual"><scope>Warrior</scope><name>setCurrentFood</name></member>
      <member refid="class_larva_1aa98638a241743fe9b0eab9267593e143" prot="public" virt="non-virtual"><scope>Warrior</scope><name>starve</name></member>
      <member refid="class_warrior_1a8660e68f16b482e46cb838f627fc94c0" prot="public" virt="non-virtual"><scope>Warrior</scope><name>takeFood</name></member>
      <member refid="class_warrior_1a514c253a8e9c3f845f11f344804335d4" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Warrior</name></member>
      <member refid="class_warrior_1af271d54079a347aa6a5c6a2805daf7b5" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Warrior</name></member>
      <member refid="class_worker_1a3754817df06ffe220f7f0d903c78ccac" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Worker</name></member>
      <member refid="class_worker_1a73f65e41a97e6f995fad96aabca5b05d" prot="public" virt="non-virtual"><scope>Warrior</scope><name>Worker</name></member>
      <member refid="class_egg_1a0eb6ce527494b7f97f362b6eb6b7f11d" prot="public" virt="non-virtual"><scope>Warrior</scope><name>~Egg</name></member>
      <member refid="class_larva_1a1f7555c8d84576eda0d3dbfc8bb88c2f" prot="public" virt="non-virtual"><scope>Warrior</scope><name>~Larva</name></member>
      <member refid="class_warrior_1aab6dc963d8e8e13517e5a9e5fa74aaaa" prot="public" virt="non-virtual"><scope>Warrior</scope><name>~Warrior</name></member>
      <member refid="class_worker_1aa8e4543ef1e93fd9d884269ba30c5bfe" prot="public" virt="non-virtual"><scope>Warrior</scope><name>~Worker</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
